/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lifenotemusiccenter_official;

//import Controller.Purchase_Frame;
//import java.awt.Color;
import java.sql.ResultSet;
//import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author lenovo
 */
public class Purchase extends javax.swing.JFrame {

    /**
     * Creates new form Purchase
     */
    public Purchase() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpSearch = new javax.swing.ButtonGroup();
        btngrpSelectPaymentOption = new javax.swing.ButtonGroup();
        btngrpDeliveryYES_NO = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbl_Item = new javax.swing.JTable();
        txtSearchItem = new javax.swing.JTextField();
        Jbtn_AddItemToCart = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jrbInstruments = new javax.swing.JRadioButton();
        jrbAccessories = new javax.swing.JRadioButton();
        jrbBooks = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTbl_Cart = new javax.swing.JTable();
        btnRemoveFromCart = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtCustomerID = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        JRB_PayInCash = new javax.swing.JRadioButton();
        JRB_PayInDebit = new javax.swing.JRadioButton();
        JRB_PayInCredit = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        txtTotalPriceToPay = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPayment = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtChange = new javax.swing.JTextField();
        Jbtn_PassTransaction = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        JRB_DeliveryYES = new javax.swing.JRadioButton();
        JRB_DeliveryNo = new javax.swing.JRadioButton();
        JSpin_DeliveryPay = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        Jbtn_GetTotal = new javax.swing.JButton();
        JLbl_CustomerName = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Life Note Music Center  - Purchase");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Orbitron", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("P u r c h a s e");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1103, 54));

        jScrollPane3.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jScrollPane3.setOpaque(false);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setOpaque(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)), "Item", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 204, 0))); // NOI18N

        jTbl_Item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Brand/Author", "Type", "Unit Price", "In Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTbl_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTbl_ItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTbl_Item);

        txtSearchItem.setEditable(false);
        txtSearchItem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtSearchItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtSearchItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchItemKeyReleased(evt);
            }
        });

        Jbtn_AddItemToCart.setBackground(new java.awt.Color(51, 255, 0));
        Jbtn_AddItemToCart.setText("Add Item To Cart");
        Jbtn_AddItemToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_AddItemToCartActionPerformed(evt);
            }
        });

        txtID.setEditable(false);
        txtID.setBackground(new java.awt.Color(0, 0, 0));
        txtID.setForeground(new java.awt.Color(255, 255, 255));
        txtID.setText("Item Identity Number");
        txtID.setBorder(null);
        txtID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtID.setOpaque(false);

        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setText("Item ID");

        jLabel3.setForeground(new java.awt.Color(255, 204, 0));
        jLabel3.setText("Item Name");

        txtName.setEditable(false);
        txtName.setBackground(new java.awt.Color(0, 0, 0));
        txtName.setForeground(new java.awt.Color(255, 255, 255));
        txtName.setText("Item Name");
        txtName.setBorder(null);
        txtName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtName.setOpaque(false);

        jLabel4.setForeground(new java.awt.Color(255, 204, 0));
        jLabel4.setText("Item Brand");

        txtBrand.setEditable(false);
        txtBrand.setBackground(new java.awt.Color(0, 0, 0));
        txtBrand.setForeground(new java.awt.Color(255, 255, 255));
        txtBrand.setText("Brand TM Name / Author");
        txtBrand.setBorder(null);
        txtBrand.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtBrand.setOpaque(false);

        jLabel5.setForeground(new java.awt.Color(255, 204, 0));
        jLabel5.setText("Item Type");

        txtType.setEditable(false);
        txtType.setBackground(new java.awt.Color(0, 0, 0));
        txtType.setForeground(new java.awt.Color(255, 255, 255));
        txtType.setText("Type of the Item");
        txtType.setBorder(null);
        txtType.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtType.setOpaque(false);

        jLabel6.setForeground(new java.awt.Color(255, 204, 0));
        jLabel6.setText("Quantity");

        txtQuantity.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantityKeyReleased(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 204, 0));
        jLabel7.setText("Total");

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(0, 0, 0));
        txtTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtTotal.setText("Total Price");
        txtTotal.setBorder(null);
        txtTotal.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTotal.setOpaque(false);

        btngrpSearch.add(jrbInstruments);
        jrbInstruments.setForeground(new java.awt.Color(255, 204, 0));
        jrbInstruments.setText("Instruments");
        jrbInstruments.setOpaque(false);
        jrbInstruments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbInstrumentsActionPerformed(evt);
            }
        });

        btngrpSearch.add(jrbAccessories);
        jrbAccessories.setForeground(new java.awt.Color(255, 204, 0));
        jrbAccessories.setText("Accessories");
        jrbAccessories.setOpaque(false);
        jrbAccessories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAccessoriesActionPerformed(evt);
            }
        });

        btngrpSearch.add(jrbBooks);
        jrbBooks.setForeground(new java.awt.Color(255, 204, 0));
        jrbBooks.setText("Book");
        jrbBooks.setOpaque(false);
        jrbBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBooksActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Clear Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbInstruments)
                            .addComponent(jrbAccessories)
                            .addComponent(jrbBooks))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Jbtn_AddItemToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jrbInstruments)
                        .addGap(3, 3, 3)
                        .addComponent(jrbAccessories)
                        .addGap(3, 3, 3)
                        .addComponent(jrbBooks)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jbtn_AddItemToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), "Cart", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 204, 0))); // NOI18N

        jTbl_Cart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Brand/Author", "Type", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTbl_Cart);

        btnRemoveFromCart.setBackground(new java.awt.Color(255, 0, 0));
        btnRemoveFromCart.setText("Remove From Cart");
        btnRemoveFromCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFromCartActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 204, 0));
        jLabel8.setText("Customer ID");

        txtCustomerID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCustomerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerIDKeyReleased(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)), "Select Payment Option", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 204, 0))); // NOI18N
        jPanel3.setOpaque(false);

        btngrpSelectPaymentOption.add(JRB_PayInCash);
        JRB_PayInCash.setForeground(new java.awt.Color(255, 204, 0));
        JRB_PayInCash.setText("Cash");
        JRB_PayInCash.setOpaque(false);
        JRB_PayInCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRB_PayInCashActionPerformed(evt);
            }
        });

        btngrpSelectPaymentOption.add(JRB_PayInDebit);
        JRB_PayInDebit.setForeground(new java.awt.Color(255, 204, 0));
        JRB_PayInDebit.setText("Debit Card");
        JRB_PayInDebit.setOpaque(false);
        JRB_PayInDebit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRB_PayInDebitActionPerformed(evt);
            }
        });

        btngrpSelectPaymentOption.add(JRB_PayInCredit);
        JRB_PayInCredit.setForeground(new java.awt.Color(255, 204, 0));
        JRB_PayInCredit.setText("Credit Card");
        JRB_PayInCredit.setOpaque(false);
        JRB_PayInCredit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRB_PayInCreditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JRB_PayInCash)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JRB_PayInCredit)
                    .addComponent(JRB_PayInDebit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JRB_PayInCash)
                    .addComponent(JRB_PayInDebit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(JRB_PayInCredit))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setForeground(new java.awt.Color(255, 0, 0));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtTotalPriceToPay.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel11.setForeground(new java.awt.Color(255, 204, 0));
        jLabel11.setText("Payment");

        txtPayment.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaymentKeyReleased(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 204, 0));
        jLabel12.setText("Change");

        txtChange.setEditable(false);
        txtChange.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        Jbtn_PassTransaction.setBackground(new java.awt.Color(51, 255, 0));
        Jbtn_PassTransaction.setText("Pass Transaction");
        Jbtn_PassTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_PassTransactionActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)), "Delivery Stats", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 204, 0))); // NOI18N
        jPanel6.setOpaque(false);

        btngrpDeliveryYES_NO.add(JRB_DeliveryYES);
        JRB_DeliveryYES.setForeground(new java.awt.Color(255, 204, 0));
        JRB_DeliveryYES.setText("YES");
        JRB_DeliveryYES.setOpaque(false);
        JRB_DeliveryYES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRB_DeliveryYESActionPerformed(evt);
            }
        });

        btngrpDeliveryYES_NO.add(JRB_DeliveryNo);
        JRB_DeliveryNo.setForeground(new java.awt.Color(255, 204, 0));
        JRB_DeliveryNo.setText("NO");
        JRB_DeliveryNo.setOpaque(false);
        JRB_DeliveryNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRB_DeliveryNoActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 204, 0));
        jLabel13.setText("Price");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(JRB_DeliveryYES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JRB_DeliveryNo)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JSpin_DeliveryPay, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JSpin_DeliveryPay)
                    .addComponent(jLabel13))
                .addGap(9, 9, 9)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JRB_DeliveryNo)
                    .addComponent(JRB_DeliveryYES))
                .addContainerGap())
        );

        Jbtn_GetTotal.setText("Total Price");
        Jbtn_GetTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_GetTotalActionPerformed(evt);
            }
        });

        JLbl_CustomerName.setForeground(new java.awt.Color(255, 255, 255));
        JLbl_CustomerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveFromCart, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Jbtn_GetTotal)
                                .addGap(10, 10, 10)
                                .addComponent(txtTotalPriceToPay, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(Jbtn_PassTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JLbl_CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnRemoveFromCart, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(JLbl_CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(Jbtn_GetTotal))
                    .addComponent(txtTotalPriceToPay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(Jbtn_PassTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane3.setViewportView(jPanel5);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1093, 469));

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1120, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 540));

        setSize(new java.awt.Dimension(1119, 568));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void jTbl_ItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTbl_ItemMouseClicked
        int row = jTbl_Item.getSelectedRow();
        if (row >= 0) {
            String ID = jTbl_Item.getValueAt(jTbl_Item.getSelectedRow(), 0) + "";
            txtID.setText(ID);

            String Name = jTbl_Item.getValueAt(jTbl_Item.getSelectedRow(), 1) + "";
            txtName.setText(Name);

            String Brand = jTbl_Item.getValueAt(jTbl_Item.getSelectedRow(), 2) + "";
            txtBrand.setText(Brand);

            String Type = jTbl_Item.getValueAt(jTbl_Item.getSelectedRow(), 3) + "";
            txtType.setText(Type);

            txtQuantity.setText("");
            txtTotal.setText("Total Price");
        }
    }//GEN-LAST:event_jTbl_ItemMouseClicked

    private void txtSearchItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchItemKeyReleased
        SearchDatabase();
    }//GEN-LAST:event_txtSearchItemKeyReleased

    private void Jbtn_AddItemToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_AddItemToCartActionPerformed
        AddItemToCart();
        txtQuantity.setText("");
    }//GEN-LAST:event_Jbtn_AddItemToCartActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        AddItemToCart();
        txtQuantity.setText("");
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyReleased
        if (txtQuantity.getText().equals("")) {
            txtTotal.setText("");
        } else {
            int Quantity = Integer.parseInt(txtQuantity.getText());
            String UnitPriceS = (String) jTbl_Item.getValueAt(jTbl_Item.getSelectedRow(), 4);
            int UnitPrice = Integer.parseInt(UnitPriceS);
            txtTotal.setText(UnitPrice * Quantity + "");
        }
    }//GEN-LAST:event_txtQuantityKeyReleased

    private void jrbInstrumentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbInstrumentsActionPerformed
        txtSearchItem.setEditable(true);
        SearchDatabase();

    }//GEN-LAST:event_jrbInstrumentsActionPerformed

    private void jrbAccessoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAccessoriesActionPerformed
        txtSearchItem.setEditable(true);
        SearchDatabase();
    }//GEN-LAST:event_jrbAccessoriesActionPerformed

    private void jrbBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBooksActionPerformed
        txtSearchItem.setEditable(true);
        SearchDatabase();
    }//GEN-LAST:event_jrbBooksActionPerformed

    private void btnRemoveFromCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromCartActionPerformed
        RemoveRow_ReUpdate();
        //Purchase_Frame.RemoveRow_code(jTbl_Cart, null, this);
    }//GEN-LAST:event_btnRemoveFromCartActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel df = (DefaultTableModel) jTbl_Item.getModel();
        int row = jTbl_Item.getRowCount();
        while (row > 0) {
            df.removeRow(0);
            row = row - 1;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCustomerIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIDKeyReleased
        try {
            String sqls = "select * from `lifenotemusiccenter`.`customer` where ID = '" + txtCustomerID.getText() + "'";
            ResultSet rsC = MyConn.search(sqls);

            String name = "select * from `lifenotemusiccenter`.`customer` where ID = '" + txtCustomerID.getText() + "'";
            ResultSet rsN = MyConn.search(name);

            while (rsC.next()) {
                if (rsC.getString("ID").equals(txtCustomerID.getText())) {
                    while (rsN.next()) {
                        JLbl_CustomerName.setText("Customer Name: " + rsN.getString("Name"));
                    }
                } else {
                    JLbl_CustomerName.setText("Customer Name: ");
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtCustomerIDKeyReleased

    private void JRB_PayInCreditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRB_PayInCreditActionPerformed
        if (JRB_PayInCredit.isSelected()) {
            txtPayment.setText(txtTotalPriceToPay.getText());
            txtPayment.setEditable(false);
            txtChange.setEditable(false);
            txtChange.setText("00");
        }
    }//GEN-LAST:event_JRB_PayInCreditActionPerformed

    private void JRB_PayInDebitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRB_PayInDebitActionPerformed
        if (JRB_PayInDebit.isSelected()) {
            txtPayment.setText(txtTotalPriceToPay.getText());
            txtPayment.setEditable(false);
            txtChange.setEditable(false);
            txtChange.setText("00");
        }
    }//GEN-LAST:event_JRB_PayInDebitActionPerformed

    private void JRB_PayInCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRB_PayInCashActionPerformed
        if (JRB_PayInCash.isSelected()) {
            txtPayment.setEditable(true);
            txtChange.setEditable(true);
        }
    }//GEN-LAST:event_JRB_PayInCashActionPerformed
    //G.Variables for below method:-
    String PayMethod = null;
    String DeliveryBoolean = null;
    private void Jbtn_PassTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_PassTransactionActionPerformed
        if (JRB_PayInCash.isSelected()) {
            PayMethod = JRB_PayInCash.getText();
            Forward();
        } else if (JRB_PayInCredit.isSelected()) {
            PayMethod = JRB_PayInCredit.getText();
            Forward();
        } else if (JRB_PayInDebit.isSelected()) {
            PayMethod = JRB_PayInDebit.getText();
            Forward();
        } else {
            JOptionPane.showMessageDialog(this, "Payment Method is not selected", "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Jbtn_PassTransactionActionPerformed

    private void txtPaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyReleased
        if (txtPayment.getText().equals("")) {
            txtChange.setText("Enter Payment Amount");
        } else {
            int TotalPrice = Integer.parseInt(txtTotalPriceToPay.getText());
            int Payment = Integer.parseInt(txtPayment.getText());
            txtChange.setText((Payment - TotalPrice) + "");
        }
    }//GEN-LAST:event_txtPaymentKeyReleased

    private void JRB_DeliveryNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRB_DeliveryNoActionPerformed
        JSpin_DeliveryPay.setEnabled(false);
    }//GEN-LAST:event_JRB_DeliveryNoActionPerformed

    private void JRB_DeliveryYESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRB_DeliveryYESActionPerformed
        JSpin_DeliveryPay.setEnabled(true);
    }//GEN-LAST:event_JRB_DeliveryYESActionPerformed

    private void Jbtn_GetTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_GetTotalActionPerformed
        int rowcounter = jTbl_Cart.getRowCount();
        int Total = 0;
        while (rowcounter > 0) {
            String Sprice = (String) jTbl_Cart.getValueAt(rowcounter - 1, 5);
            int price = Integer.parseInt(Sprice);
            Total = Total + price;
            rowcounter = rowcounter - 1;
        }
        txtTotalPriceToPay.setText(Total + "");
    }//GEN-LAST:event_Jbtn_GetTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Purchase().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLbl_CustomerName;
    private javax.swing.JRadioButton JRB_DeliveryNo;
    private javax.swing.JRadioButton JRB_DeliveryYES;
    private javax.swing.JRadioButton JRB_PayInCash;
    private javax.swing.JRadioButton JRB_PayInCredit;
    private javax.swing.JRadioButton JRB_PayInDebit;
    private javax.swing.JSpinner JSpin_DeliveryPay;
    private javax.swing.JButton Jbtn_AddItemToCart;
    private javax.swing.JButton Jbtn_GetTotal;
    private javax.swing.JButton Jbtn_PassTransaction;
    private javax.swing.JButton btnRemoveFromCart;
    private javax.swing.ButtonGroup btngrpDeliveryYES_NO;
    private javax.swing.ButtonGroup btngrpSearch;
    private javax.swing.ButtonGroup btngrpSelectPaymentOption;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTbl_Cart;
    private javax.swing.JTable jTbl_Item;
    private javax.swing.JRadioButton jrbAccessories;
    private javax.swing.JRadioButton jrbBooks;
    private javax.swing.JRadioButton jrbInstruments;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtChange;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearchItem;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalPriceToPay;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables

    private void SearchDatabase() {
        DefaultTableModel df = (DefaultTableModel) jTbl_Item.getModel();

        if (jrbInstruments.isSelected()) {
            try {

                String searchI = "select*from lifenotemusiccenter.instruments "
                        + "where Name like '" + txtSearchItem.getText() + "%'";
                ResultSet rs = MyConn.search(searchI);
                df.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("ID"));
                    v.add(rs.getString("Name"));
                    v.add(rs.getString("Brand"));
                    v.add(rs.getString("Type"));
                    v.add(rs.getString("Unit Price"));
                    v.add(rs.getString("Stock"));
                    df.addRow(v);
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        if (jrbAccessories.isSelected()) {
            try {
                String searchA = "select*from accessories where Name like '" + txtSearchItem.getText() + "%'";
                ResultSet rs = MyConn.search(searchA);
                df.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("ID"));
                    v.add(rs.getString("Name"));
                    v.add(rs.getString("Brand"));
                    v.add(rs.getString("Type"));
                    v.add(rs.getString("Unit Price"));
                    v.add(rs.getString("Stock"));
                    df.addRow(v);

                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        if (jrbBooks.isSelected()) {
            try {
                String searchB = "select*from books where Name like '" + txtSearchItem.getText() + "%'";
                ResultSet rs = MyConn.search(searchB);
                df.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("ID"));
                    v.add(rs.getString("Name"));
                    v.add(rs.getString("Author"));
                    v.add(rs.getString("Type"));
                    v.add(rs.getString("Unit Price"));
                    v.add(rs.getString("Stock"));
                    df.addRow(v);
                }

            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }

    private void AddItemToCart() {
        DefaultTableModel df2 = (DefaultTableModel) jTbl_Cart.getModel();
        Vector v = new Vector();
        v.add(txtID.getText());
        v.add(txtName.getText());
        v.add(txtBrand.getText());
        v.add(txtType.getText());
        v.add(txtQuantity.getText());
        v.add(txtTotal.getText());
        df2.addRow(v);

        DefaultTableModel df1 = (DefaultTableModel) jTbl_Item.getModel();

        int Quantity = Integer.parseInt(txtQuantity.getText());
        int rownumber = jTbl_Item.getSelectedRow();
        String SCurrentStock = (String) jTbl_Item.getValueAt(rownumber, 5);
        int CurrentStock = Integer.parseInt(SCurrentStock);
        int INewStock = CurrentStock - Quantity;
        String NewStock = String.valueOf(INewStock);

        if (jrbAccessories.isSelected()) {
            try {
                String up5 = "UPDATE `lifenotemusiccenter`.`accessories` SET `Stock`= '" + NewStock + "' "
                        + "where `ID`='" + jTbl_Item.getValueAt(rownumber, 0) + "'";
                MyConn.save(up5);
            } catch (Exception ex) {
                System.out.println(ex);
            }
        } else if (jrbBooks.isSelected()) {
            try {
                String up5 = "UPDATE `lifenotemusiccenter`.`books` SET `Stock`= '" + NewStock + "' "
                        + "where `ID`='" + jTbl_Item.getValueAt(rownumber, 0) + "'";
                MyConn.save(up5);
            } catch (Exception ex) {
                System.out.println(ex);
            }
        } else if (jrbInstruments.isSelected()) {
            try {
                String up5 = "UPDATE `lifenotemusiccenter`.`instruments` SET `Stock`= '" + NewStock + "' "
                        + "where `ID`='" + jTbl_Item.getValueAt(rownumber, 0) + "'";
                MyConn.save(up5);
            } catch (Exception ex) {
                System.out.println(ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select the database,"
                    + "the item was chosen", "Can't Find the database",
                    JOptionPane.ERROR_MESSAGE);
        }

        for (int i = 0; i < df1.getRowCount(); i++) {
            df1.removeRow(i);
        }
        SearchDatabase();
    }

    private void RemoveRow_ReUpdate() {
        try {
            DefaultTableModel df = (DefaultTableModel) jTbl_Cart.getModel();
            int i = jTbl_Cart.getSelectedRow();

            String name = (String) df.getValueAt(i, 1);
            String brand_author = (String) df.getValueAt(i, 2);
            String Strquantity = (String) df.getValueAt(i, 4);
            int quantity = Integer.parseInt(Strquantity);
            //below is getting names from table and taking resultset 
            String nameFROMaccessories = "select * from accessories where Name = '" + name + "'";
            String nameFROMinstruments = "select * from instruments where Name = '" + name + "'";
            String nameFROMbooks = "select * from books where Name = '" + name + "'";

            ResultSet rsNfInstruments = MyConn.search(nameFROMinstruments);
            ResultSet rsNfAccessories = MyConn.search(nameFROMaccessories);
            ResultSet rsNfBooks = MyConn.search(nameFROMbooks);

            //below is getting brand_author from table and taking resultset 
            String brand_authorFROMaccessories = "select * from accessories where Brand = '" + brand_author + "'";
            String brand_authorFROMbooks = "select * from books where Author = '" + brand_author + "'";
            String brand_authorFROMinstruments = "select * from instruments where Brand = '" + brand_author + "'";

            ResultSet rsB_AfInstruments = MyConn.search(brand_authorFROMinstruments);
            ResultSet rsB_AfAccessories = MyConn.search(brand_authorFROMaccessories);
            ResultSet rsB_AfBooks = MyConn.search(brand_authorFROMbooks);

            if (rsNfInstruments.next() && rsB_AfInstruments.next()) {
                String getID = "SELECT `ID` FROM instruments where"
                        + " Name = '" + name + "' AND Brand = '" + brand_author + "'";
                ResultSet rsID = MyConn.search(getID);

                while (rsID.next()) {
                    String up = "UPDATE `lifenotemusiccenter`.`instruments`"
                            + " SET `Stock`= Stock + '" + quantity + "' WHERE `ID`='" + rsID.getString("ID") + "'";
                    MyConn.save(up);
                }
            } else if (rsNfAccessories.next() && rsB_AfAccessories.next()) {
                String getID = "SELECT `ID` FROM Accessories where"
                        + " Name = '" + name + "' AND Brand = '" + brand_author + "'";
                ResultSet rsID = MyConn.search(getID);

                while (rsID.next()) {
                    String up = "UPDATE `lifenotemusiccenter`.`accessories`"
                            + " SET `Stock`= Stock + '" + quantity + "' WHERE `ID`='" + rsID.getString("ID") + "'";
                    MyConn.save(up);
                }
            } else if (rsNfBooks.next() && rsB_AfBooks.next()) {
                String getID = "SELECT `ID` FROM Books where"
                        + " Name = '" + name + "' AND Author = '" + brand_author + "'";
                ResultSet rsID = MyConn.search(getID);

                while (rsID.next()) {
                    String up = "UPDATE `lifenotemusiccenter`.`books`"
                            + " SET `Stock`= Stock + '" + quantity + "' WHERE `ID`='" + rsID.getString("ID") + "'";
                    MyConn.save(up);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Database Table not found", "Cannot Proceed", JOptionPane.ERROR_MESSAGE);
            }
            df.removeRow(i);
            i++;

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void PrintReport() {
        try {
            JasperReport report = JasperCompileManager.compileReport("PurchaseReport.jrxml");
            DefaultTableModel df = (DefaultTableModel) jTbl_Cart.getModel();
            JasperPrint print = JasperFillManager.fillReport(report, null, new JRTableModelDataSource(df));
            JasperViewer.viewReport(print, false);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void Forward() {
        if (JRB_DeliveryYES.isSelected()) {
            DeliveryBoolean = JRB_DeliveryYES.getText();
            try {
                String addtoPurchaseTbl = "INSERT INTO `lifenotemusiccenter`.`purchase`"
                        + "(`Customer_ID`, `Date & Time`, `Total`, `Payment Option`,"
                        + "`Payment`, `Change`, `Delivery`, `Delivery Payment`) VALUES"
                        + "('" + txtCustomerID.getText() + "', now() ,"
                        + "'" + txtTotalPriceToPay.getText() + "', '" + PayMethod + "'"
                        + ",'" + txtPayment.getText() + "','" + txtChange.getText() + "', '" + DeliveryBoolean + "',"
                        + "'" + JSpin_DeliveryPay.getValue() + "')";
                MyConn.save(addtoPurchaseTbl);
                PrintReport();
            } catch (Exception ex) {
                System.out.println(ex);
            }
        } else if (JRB_DeliveryNo.isSelected()) {
            DeliveryBoolean = JRB_DeliveryNo.getText();
            try {
                String addtoPurchaseTbl = "INSERT INTO `lifenotemusiccenter`.`purchase`"
                        + "(`Customer_ID`, `Date & Time`, `Total`, `Payment Option`,"
                        + "`Payment`, `Change`, `Delivery`, `Delivery Payment`) VALUES"
                        + "('" + txtCustomerID.getText() + "', now() ,"
                        + "'" + txtTotalPriceToPay.getText() + "', '" + PayMethod + "'"
                        + ",'" + txtPayment.getText() + "','" + txtChange.getText() + "', '" + DeliveryBoolean + "',"
                        + "'" + JSpin_DeliveryPay.getValue() + "')";
                MyConn.save(addtoPurchaseTbl);
                PrintReport();
            } catch (Exception ex) {
                System.out.println(ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Delivery Status is not confirmed", "", JOptionPane.ERROR_MESSAGE);
        }
    }
}
