/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lifenotemusiccenter_official;

import java.awt.Color;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Tharindu Munasinghe
 */
public class AdminRegistration extends javax.swing.JFrame {

    /**
     * Creates new form AdminRegistration
     */
    public AdminRegistration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        JbtnInsertAdmin = new javax.swing.JButton();
        JbtnDeleteAdmin = new javax.swing.JButton();
        JPF_PW = new javax.swing.JPasswordField();
        JtogB_PW = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        JPF_ConfPW = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        JtogB_ConfPW = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LNMC - Administration");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Orbitron", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADMINISTRATION");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 51));

        jLabel3.setForeground(new java.awt.Color(255, 204, 0));
        jLabel3.setText("Username");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 88, 63, 31));

        jLabel4.setForeground(new java.awt.Color(255, 204, 0));
        jLabel4.setText("Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 86, 31));

        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsernameKeyReleased(evt);
            }
        });
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 88, 243, 31));

        JbtnInsertAdmin.setBackground(new java.awt.Color(51, 255, 51));
        JbtnInsertAdmin.setText("Insert");
        JbtnInsertAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnInsertAdminActionPerformed(evt);
            }
        });
        getContentPane().add(JbtnInsertAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 305, 146, 30));

        JbtnDeleteAdmin.setBackground(new java.awt.Color(255, 0, 0));
        JbtnDeleteAdmin.setText("Delete");
        JbtnDeleteAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnDeleteAdminActionPerformed(evt);
            }
        });
        getContentPane().add(JbtnDeleteAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(314, 305, 146, 30));

        JPF_PW.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JPF_PWKeyReleased(evt);
            }
        });
        getContentPane().add(JPF_PW, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 130, 243, 31));

        JtogB_PW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lifenotemusiccenter_official/eyepw.png"))); // NOI18N
        JtogB_PW.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/lifenotemusiccenter/Eye-512.png"))); // NOI18N
        JtogB_PW.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/lifenotemusiccenter/Eye-512.png"))); // NOI18N
        JtogB_PW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtogB_PWActionPerformed(evt);
            }
        });
        getContentPane().add(JtogB_PW, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 130, 75, 68));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 167, 243, 31));

        JPF_ConfPW.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JPF_ConfPWKeyReleased(evt);
            }
        });
        getContentPane().add(JPF_ConfPW, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 204, 243, 31));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 241, 243, 31));

        JtogB_ConfPW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lifenotemusiccenter_official/eyepw.png"))); // NOI18N
        JtogB_ConfPW.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/lifenotemusiccenter/Eye-512.png"))); // NOI18N
        JtogB_ConfPW.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/lifenotemusiccenter/Eye-512.png"))); // NOI18N
        JtogB_ConfPW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtogB_ConfPWActionPerformed(evt);
            }
        });
        getContentPane().add(JtogB_ConfPW, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 204, 75, 71));

        jLabel7.setForeground(new java.awt.Color(255, 204, 0));
        jLabel7.setText("Confirm Password");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 204, 95, 31));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Spaces aren't allowed");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 63, 241, 19));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 350));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-486)/2, (screenSize.height-385)/2, 486, 385);
    }// </editor-fold>//GEN-END:initComponents

    private void JbtnInsertAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnInsertAdminActionPerformed
        if (JPF_PW.getText().equals(JPF_ConfPW.getText())) {
            String encryptingPW = encrypt(JPF_PW.getText());
            try {
                String sqlAdminDB = "INSERT INTO `admins`"
                        + "(`Username`, `Password`)" + "VALUES"
                        + "('" + txtUsername.getText()
                        + "', '" + encryptingPW + "')";
                MyConn.save(sqlAdminDB);
                JOptionPane.showMessageDialog(this,
                        "New Administrator " + txtUsername.getText()
                        + ", successfully added to the database");

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "The Passwords are not matching",
                    null, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_JbtnInsertAdminActionPerformed

    private void JbtnDeleteAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnDeleteAdminActionPerformed
        try {
            if (JPF_PW.getText().equals(JPF_ConfPW.getText())) {

                String encryptedPW = encrypt(JPF_PW.getText());
                String Thingy = "select*from lifenotemusiccenter.admins where "
                        + "Username= '" + txtUsername.getText() + "' AND "
                        + "Password='" + encryptedPW + "'";
                ResultSet rsT = (ResultSet) MyConn.search(Thingy);

                if (rsT.next()) {
                    String admin_del = "DELETE FROM `lifenotemusiccenter`.`admins`"
                            + "WHERE `Username`= '" + txtUsername.getText() + "'";
                    MyConn.save(admin_del);
                    JOptionPane.showMessageDialog(this, "The administrator " + "'"
                            + txtUsername.getText() + "'"
                            + " Successfully deleted from the database");
                } else {
                    JOptionPane.showMessageDialog(this, "The Username "
                            + txtUsername.getText() + " or Password is incorrect",
                            null, JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "The Username "
                        + txtUsername.getText() + " or Password is incorrect",
                        null, JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_JbtnDeleteAdminActionPerformed

    private void JPF_PWKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JPF_PWKeyReleased
        if (JtogB_PW.isSelected()) {
            jLabel5.setText(JPF_PW.getText());
        } else {
        }
    }//GEN-LAST:event_JPF_PWKeyReleased

    private void JPF_ConfPWKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JPF_ConfPWKeyReleased
        if (JtogB_ConfPW.isSelected()) {
            jLabel6.setText(JPF_ConfPW.getText());
        } else {
        }
    }//GEN-LAST:event_JPF_ConfPWKeyReleased

    private void JtogB_PWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtogB_PWActionPerformed
        if (jLabel5.getText().equals("")) {
            String s = JPF_PW.getText();
            jLabel5.setText(s);
            for (int i = 0; i < 3; i++) {
                try {
                    Thread.sleep(10);
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
            //jLabel5.setText("");
        } else {
            jLabel5.setText("");
        }
    }//GEN-LAST:event_JtogB_PWActionPerformed

    private void JtogB_ConfPWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtogB_ConfPWActionPerformed
        if (jLabel6.getText().equals("")) {
            String s = JPF_PW.getText();
            jLabel6.setText(s);
            for (int i = 0; i < 3; i++) {
                try {
                    Thread.sleep(10);
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
            //jLabel5.setText("");
        } else {
            jLabel6.setText("");
        }
    }//GEN-LAST:event_JtogB_ConfPWActionPerformed

    private void txtUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyReleased
        try {
            String check = txtUsername.getText();
            String check1 = "select*from lifenotemusiccenter.admins where "
                    + "Username= '" + txtUsername.getText() + "'";
            ResultSet rs = (ResultSet) MyConn.search(check1);

            boolean a = check.contains("/") || check.contains("!") || check.contains(" ")
                    || check.contains("#") || check.contains("$") || check.contains("%")
                    || check.contains("^") || check.contains("&") || check.contains("*")
                    || check.contains("(") || check.contains(")") || check.contains("+")
                    || check.contains("`") || check.contains("-") || check.contains("=")
                    || check.contains("{") || check.contains("}") || check.contains("~")
                    || check.contains("[") || check.contains("]") || check.contains("<")
                    || check.contains(">") || check.contains(",") || check.contains("?")
                    || check.contains("|") || check.contains("@") || check.contains(":")
                    || check.contains("'") || check.contains(";") || check.contains("'")
                    || check.contains("\"") || check.contains("\"");

            // || check.contains("\")");
            if (rs.next()) {
                jLabel2.setForeground(Color.YELLOW);
                jLabel2.setText("Username is already in use");
            } else if (a) {
                jLabel2.setForeground(Color.red);
                jLabel2.setText("Username have invalid characters");
            } else {
                jLabel2.setForeground(Color.WHITE);
                jLabel2.setText("Spaces aren't allowed");
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtUsernameKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AdminRegistration().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField JPF_ConfPW;
    private javax.swing.JPasswordField JPF_PW;
    private javax.swing.JButton JbtnDeleteAdmin;
    private javax.swing.JButton JbtnInsertAdmin;
    private javax.swing.JToggleButton JtogB_ConfPW;
    private javax.swing.JToggleButton JtogB_PW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private String encrypt(String pass) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] bytes = digest.digest(pass.getBytes(StandardCharsets.UTF_8));
            String s = "";
            for (byte b : bytes) {
                s += b;
            }
            return s;
        } catch (Exception e) {
            return null;
        }
    }
}
